/******************************************************************************
 *
 * eclsummaryreader.h
 *
 * Created: 07.10.2015 2015 by einar
 *
 * This file is part of the FieldOpt project.
 *
 * Copyright (C) 2015-2015 Einar J.M. Baumann <einar.baumann@ntnu.no>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
 *****************************************************************************/

#ifndef ECLSUMMARYREADER_H
#define ECLSUMMARYREADER_H

#include <ert/ecl/ecl_sum.h>
#include <QString>

namespace ERTWrapper {
namespace ECLSummary {

/*!
 * \brief The ECLSummaryReader class is a wrapper for ecl_sum in ERT. It lets you retrieve information
 * from summary files generated by eclipse.
 */
class ECLSummaryReader
{
public:
    /*!
     * \brief ECLSummaryReader Reads the summary file specified in the parameter.
     * \param file_name Path to the eclipse summary, with or without file suffix.
     */
    ECLSummaryReader(QString file_name);
    ~ECLSummaryReader();

    /*!
     * \brief GetMiscVar Get a Misc var. Calls ecl_sum_get_misc_var.
     * \param var_name Name of the variable to get, e.g. TIME or YEARS.
     * \param time_index The time index (0 and up).
     * \return The value of the variable at the specified time index.
     */
    double GetMiscVar(QString var_name, int time_index);

    /*!
     * \brief GetFieldVar Get a Field variable. Calls ecl_sum_get_field_var.
     * \param var_name Name of the variable to get, e.g. FOPT or FWCT.
     * \param time_index The time index (0 and up).
     * \return The value of the variable at the specified time index.
     */
    double GetFieldVar(QString var_name, int time_index);

    /*!
     * \brief GetWellVar Get a Well variable. Calls ecl_sum_get_well_var.
     * \param well_name Name of the variable to get, e.g. WOPR or WBHP.
     * \param var_name Name of the well to which the variable belongs, e.g. "PROD" or "INJ" (must be upper-case).
     * \param time_index The time index (0 and up).
     * \return The value of the variable at the specified time index.
     */
    double GetWellVar(QString well_name, QString var_name, int time_index);

    int GetLastReportStep(); //!< Get the last report step, i.e. the highest possible time index.
    int GetFirstReportStep(); //!< Get the first report step, i.e. the lowest possible time index (usually 0).
    bool HasReportStep(int report_step); //!< Check whether the report step is valid, i.e. < last and > first.

private:
    QString file_name_;
    ecl_sum_type *ecl_sum_;


    bool hasWellVar(QString well_name, QString var_name);
    bool hasGroupVar(QString group_name, QString var_name);
    bool hasFieldVar(QString var_name);
    bool hasBlockVar(int block_nr, QString var_name);
    bool hasMiscVar(QString var_name);
};

}
}

#endif // ECLSUMMARYREADER_H
